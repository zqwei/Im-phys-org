<p>
  The inverse problem, inferring the times at which a neuron fired a spike given recorded
  calcium imaging data, is far more difficult.
</p>
<p>
  We tested tens of calcium to spike model.
  In general, calcium to spike models posit a generative model for the imaging data given
  a spike time series, and then infer the spike time series by maximizing the likelihood
  of the data.
  The generative model typically follows a similar mathematical setup to that of the calcium
   to spike models:
  <br>
  First, the (unknown) spikes at time $t$ (usually in a small time bin, $dt$)
  are converted to a latent variable, c(t), using an n-step autoregressive, process, AR(n):
  $$c(t) = \sum_{i=1}^n a_i \cdot c(t-i) + spk(t)$$
  where $n = 1$, $a_1 = 1-\frac{dt}{\tau_d}$, $spk(t)$ is the number of spikes in time bin $dt$ (usually zero or one). Second, c(t) is converted to a synthetic
  fluorescence signal through a general function $f(\cdot)$:
  $$F_{synth}(t) = f(c(t)) + n_e(t)$$.
  As before since synthetic data contains no baseline activity, the synthetic imaging data
  itself $F_{synth}(t)$ is the signal that is relevant to compare to $\Delta F/F$
  in data
</p>

<div class="ui accordion">
  <div class="title"><h3>
     <i class="dropdown icon"></i>
      Read more about the different models </h3>
  </div>
  <div class="content">
    <h2>C2S Nonnegative Wienner Filter</h2>
    <p>
      <div class="ui large bulleted list">
        <div class="item">
          AR(1) process: $n = 1$.
        </div>
        <div class="item">
          Non-negative spike counts: $spk$ is non-negative (not strictly to be integer).
        </div>
        <div class="item">
          Noise structures: $n_e$ follows Gaussian distribution.
        </div>
        <div class="item">
          $f(\cdot)$ function: linear.
        </div>
        <div class="item"><span class="ui inverted black label">Reference</span>
        Vogelstein et al. (2010) Fast nonnegative deconvolution for spike train inference from population calcium imaging. J. Neurophysiol.</div>
        <div class="item"><span class="ui inverted black label">Source code</span>
        <a href="https://github.com/liubenyuan/py-oopsi">https://github.com/liubenyuan/py-oopsi</a></div>
      </div>
    </p>
    <h2>C2S FOOPSI</h2>
    <p>
      <div class="ui large bulleted list">
        <div class="item">
          AR(1) process: $n = 1$.
        </div>
        <div class="item">
          Poisson spike counts: $spk$ follows "Poission" distribution, which is approximated with an Exponential (not strictly to be integer).
        </div>
        <div class="item">
          Noise structures: $n_e$ follows Gaussian distribution.
        </div>
        <div class="item">
          $f(\cdot)$ function: linear.
        </div>
        <div class="item"><span class="ui inverted black label">Reference</span>
        Vogelstein et al. (2010) Fast nonnegative deconvolution for spike train inference from population calcium imaging. J. Neurophysiol.</div>
        <div class="item"><span class="ui inverted black label">Source code</span>
        <a href="https://github.com/liubenyuan/py-oopsi">https://github.com/liubenyuan/py-oopsi</a></div>
      </div>
    </p>
    <h2>C2S Finite Rate of Innovation</h2>
    <p>
      <div class="ui large bulleted list">
        <div class="item">
          AR(1) process: $n = 1$.
        </div>
        <div class="item">
          Spike counts: strictly to be integer and the number of spike is decided using theory of finite-rate innovation signals.
        </div>
        <div class="item">
          Noise structures: $n_e$ follows Gaussian distribution.
        </div>
        <div class="item">
          $f(\cdot)$ function: linear.
        </div>
        <div class="item"><span class="ui inverted black label">Reference</span>
        OÃ±ativia et al. (2013) A Finite Rate of Innovation algorithm for fast and accurate spike detection from two-photon calcium imaging. J. Neural Eng.</div>
        <div class="item"><span class="ui inverted black label">Source code</span>
        <a href="http://www.commsp.ee.ic.ac.uk/~jo210/src/ca_transient.zip">http://www.commsp.ee.ic.ac.uk/~jo210/src/ca_transient.zip</a></div>
      </div>
    </p>
    <h2>C2S Constrained OOPSI AR(n)</h2>
    <p>
      <div class="ui large bulleted list">
        <div class="item">
          AR(n) process: $n$ is taken from 1, 2, or 3.
        </div>
        <div class="item">
          Poisson spike counts: $spk$ follows "Poission" distribution.
        </div>
        <div class="item">
          Noise structures: $n_e$ follows Gaussian distribution; empirical estimation of noise prior.
        </div>
        <div class="item">
          $f(\cdot)$ function: linear.
        </div>
        <div class="item"><span class="ui inverted black label">Reference</span>
        Pnevmatikakis et al. (2016) Simultaneous Denoising, Deconvolution, and Demixing of Calcium Imaging Data. Neuron.</div>
        <div class="item"><span class="ui inverted black label">Source code</span>
        <a href="https://github.com/epnev/constrained_foopsi_python">https://github.com/epnev/constrained_foopsi_python</a></div>
      </div>
    </p>
    <h2>C2S Constrained OOPSI MCMC</h2>
    <p>
      <div class="ui large bulleted list">
        <div class="item">
          AR(1) process: $n = 1$.
        </div>
        <div class="item">
          Poisson spike counts: $spk$ follows "Poission" distribution, which is sampled using discrete binary sampler using MCMC.
        </div>
        <div class="item">
          Noise structures: $n_e$ follows Gaussian distribution.
        </div>
        <div class="item">
          $f(\cdot)$ function: linear.
        </div>
        <div class="item"><span class="ui inverted black label">Reference</span>
        Pnevmatikakis et al. (2014). Bayesian spike inference from calcium imaging data. Asilomar Conf. on Signals, Systems, and Computers.</div>
        <div class="item"><span class="ui inverted black label">Source code</span>
        <a href="https://github.com/epnev/continuous_time_ca_sampler">https://github.com/epnev/continuous_time_ca_sampler</a></div>
      </div>
    </p>
    <h2>C2S Peel Linear</h2>
    <p>
      <div class="ui large bulleted list">
        <div class="item">
          AR process: the same as spike-to-calcium model with $\tau_r$ and $\tau_d$
        </div>
        <div class="item">
          Spike counts: strictly to be integer and using template-matching to search the optimal number.
        </div>
        <div class="item">
          Noise structures: $n_e$ follows Gaussian distribution.
        </div>
        <div class="item">
          $f(\cdot)$ function: linear.
        </div>
        <div class="item"><span class="ui inverted black label">Reference</span>
        Grewe et al. (2010) High-speed in vivo calcium imaging reveals neuronal network activity with near-millisecond precision. Nat. Methods</div>
        <div class="item"><span class="ui inverted black label">Source code</span>
        <a href="https://github.com/HelmchenLab/CalciumSim">https://github.com/HelmchenLab/CalciumSim</a></div>
      </div>
    </p>
    <h2>C2S Peel Nonlinear</h2>
    <p>
      <div class="ui large bulleted list">
        <div class="item">
          AR process: the same as spike-to-calcium model with $\tau_r$ and $\tau_d$
        </div>
        <div class="item">
          Spike counts: strictly to be integer and using template-matching to search the optimal number.
        </div>
        <div class="item">
          Noise structures: $n_e$ follows Gaussian distribution.
        </div>
        <div class="item">
          $f(\cdot)$ function: hill function with n=1.
        </div>
        <div class="item"><span class="ui inverted black label">Reference</span>
        Grewe et al. (2010) High-speed in vivo calcium imaging reveals neuronal network activity with near-millisecond precision. Nat. Methods</div>
        <div class="item"><span class="ui inverted black label">Source code</span>
        <a href="https://github.com/HelmchenLab/CalciumSim">https://github.com/HelmchenLab/CalciumSim</a></div>
      </div>
    </p>
    <h2>C2S MLSpike</h2>
    <p>
      <div class="ui large bulleted list">
        <div class="item">
          AR process: the same as spike-to-calcium model with $\tau_d$
        </div>
        <div class="item">
          Spike counts: strictly to be integer and using template-matching to search the optimal number.
        </div>
        <div class="item">
          Noise structures: $n_e$ follows Gaussian distribution.
        </div>
        <div class="item">
          $f(\cdot)$ function: hill function with n=1.
        </div>
        <div class="item"><span class="ui inverted black label">Reference</span>
        Deneux et al. (2016) Accurate spike estimation from noisy calcium signals for ultrafast three-dimensional imaging of large neuronal populations in vivo. Nat. Commun.</div>
        <div class="item"><span class="ui inverted black label">Source code</span>
        <a href="https://github.com/MLspike/spikes">https://github.com/MLspike/spikes</a></div>
      </div>
    </p>
  </div>
</div>

{{> _contribute_code}}

<br><br><br>
